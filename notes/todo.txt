-generate the summary file
-pick numbers as well as percentage
-refactor to functions
-readme file to show usage
-after 2nd level directory pick, check to see if there are image files first before going to next stage
-if load to dropbox folder, consider delete the previous directory 
 -under Photos/Photos_of_the_day
  -remove the previous directory
  -create a new directory for today's run
 -consider have a staging directory for approval before send out 
v-optimize the case if pick number or percentage is high enough (i.e. pick number == number of files), 
 then should not use random pick because this will very long to complete
 v-should simply just leverage the File[] to pick the files, instead of putting it into a map
 v-now convert the File[] to LinkedList<File>, and use the remove(random) to get the files

-build in some smartness:
 -track history picks to avoid picking the same album
 -take user preference to lean towards certain directory (e.g. 1st level: I want to see something in year 2000 to 2004)
 
 -error checking
  -validate source and destination directories
  
-readme contents
 -motivates me to better organize my picture
 -motivates me to delete bad pictures
 -motivates me to take better pictures ;-P